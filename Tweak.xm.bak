//
//  Wu-Tang Lock Glyph
//
//  Created by Sticktron.
//  Copyright (c) 2014. All rights reserved.
//
//

#define DEBUG_PREFIX @"Wu-Tang Lock"
#import "DebugLog.h"

#import <UIKit/UIKit.h>


@interface SBBacklightController : NSObject
- (void)_lockScreenDimTimerFired;
- (double)defaultLockScreenDimInterval;
@end

@interface SBLockScreenView : UIView
- (void)_startAnimatingSlideToUnlockWithDelay:(double)arg1;
@end

@interface SBLockScreenScrollView : UIScrollView
- (void)addShineAnimationToView:(id)view;
@end

@interface _UIGlintyStringView : UIView
@property(retain, nonatomic) UIView *backgroundView;
@end

@interface UIView (Private)
- (void)_setDrawsAsBackdropOverlayWithBlendMode:(long long)arg1;
@end



#define kMarginBottom	110.0f
#define kGlyphPath		@"/Library/Application Support/WuLock"

static BOOL enabled;
static BOOL showSlideTextImmediately;
static UIImageView *glyphView;



// hoooks

%hook SBBacklightController

- (double)defaultLockScreenDimInterval {
	// default is 8 seconds
	return 300;
}

%end


%hook SBLockScreenView

- (void)_startAnimatingSlideToUnlockWithDelay:(double)delay {
	if (showSlideTextImmediately) {
		%orig(0);
	} else {
		%orig;
	}
}

%end

%hook SBLockScreenScrollView

- (void)didMoveToWindow {
	DebugLog0;
	
	// load image
	NSString *file = @"wu.png";
	NSString *path = [kGlyphPath stringByAppendingPathComponent:file];
	UIImage *image = [[UIImage alloc] initWithContentsOfFile:path];
	DebugLog(@"image=%@", image);
	
	// create view
	glyphView = [[UIImageView alloc] initWithImage:image];
	[image release];
	
	// border (debug)
	//glyphView.layer.borderColor = UIColor.whiteColor.CGColor;
	//glyphView.layer.borderWidth = 1.0f;
	
	// position
	CGRect screenRect = [UIScreen mainScreen].bounds;
	CGPoint center;
	center.x = screenRect.size.width + CGRectGetMidX(screenRect);
	center.y = screenRect.size.height - kMarginBottom - CGRectGetMidY(glyphView.frame);
	glyphView.center = center;
	
	// effect
	glyphView.alpha = 0.3f;
	[glyphView _setDrawsAsBackdropOverlayWithBlendMode:kCGBlendModeColorDodge];
	
	
	
	[self addSubview:glyphView];
	
	// animation?
	//self addShineAnimationToView:glyphView];
}

/*
- (void)layoutSubviews {
	DebugLog0;
	%orig;
}

- (void)_layoutSlideToUnlockView {
	DebugLog0;
	%orig;
	
//	_UIGlintyStringView *glintyView = MSHookIvar<id>(self, "_slideToUnlockView");
//	DebugLog(@"glintyView=%@", glintyView);
	
//	DebugLog(@"glyphView=%@", glyphView);
//	glyphView.center = glintyView.center;
//	glyphView.backgroundColor = UIColor.greenColor;
	
//	[glintyView addSubview:glyphView];
//	glintyView.backgroundView = glyphView;
//	glintyView.backgroundColor = UIColor.blackColor;
	
}
*/



// Not my method, taken from this Stack Overflow
// answer: http://stackoverflow.com/a/26081621
%new
- (void)addShineAnimationToView:(UIView*)aView {
	CAGradientLayer *gradient = [CAGradientLayer layer];
	[gradient setStartPoint:CGPointMake(0, 0)];
	[gradient setEndPoint:CGPointMake(1, 0)];
	gradient.frame = CGRectMake(0, 0, aView.bounds.size.width*3, aView.bounds.size.height);
	float lowerAlpha = 0.78;
	gradient.colors = [NSArray arrayWithObjects:
					   (id)[[UIColor colorWithWhite:1 alpha:lowerAlpha] CGColor],
					   (id)[[UIColor colorWithWhite:1 alpha:lowerAlpha] CGColor],
					   (id)[[UIColor colorWithWhite:1 alpha:1.0] CGColor],
					   (id)[[UIColor colorWithWhite:1 alpha:1.0] CGColor],
					   (id)[[UIColor colorWithWhite:1 alpha:1.0] CGColor],
					   (id)[[UIColor colorWithWhite:1 alpha:lowerAlpha] CGColor],
					   (id)[[UIColor colorWithWhite:1 alpha:lowerAlpha] CGColor],
					   nil];
	gradient.locations = [NSArray arrayWithObjects:
						  [NSNumber numberWithFloat:0.0],
						  [NSNumber numberWithFloat:0.4],
						  [NSNumber numberWithFloat:0.45],
						  [NSNumber numberWithFloat:0.5],
						  [NSNumber numberWithFloat:0.55],
						  [NSNumber numberWithFloat:0.6],
						  [NSNumber numberWithFloat:1.0],
						  nil];
	
	CABasicAnimation *theAnimation;
	theAnimation=[CABasicAnimation animationWithKeyPath:@"transform.translation.x"];
	theAnimation.duration = 2;
	theAnimation.repeatCount = INFINITY;
	theAnimation.autoreverses = NO;
	theAnimation.removedOnCompletion = NO;
	theAnimation.fillMode = kCAFillModeForwards;
	theAnimation.fromValue=[NSNumber numberWithFloat:-aView.frame.size.width*2];
	theAnimation.toValue=[NSNumber numberWithFloat:0];
	[gradient addAnimation:theAnimation forKey:@"animateLayer"];
	
	aView.layer.mask = gradient;
}

%end



//	if (!wuView) {
//		wuView = YES;
//		DebugLog(@"creating Wu View");
//
//		UIView *slideView = MSHookIvar<id>(self, "_slideToUnlockView");
//		DebugLog(@"slidToUnlockView = %@", slideView);
//
//		CGRect frame = slideView.frame;
//		frame.origin.x = 100.0;
//		frame.origin.y -= 60.0;
//		frame.size.width = 60.0;
//		frame.size.height = 60.0;
//		
//		_UIGlintyGradientView *gv = [[%c(_UIGlintyGradientView) alloc] initWithFrame:frame];
//		gv.backgroundColor = UIColor.greenColor;
//		DebugLog(@"gv = %@", gv);
//		
//		NSString *path = @"/Library/PreferenceBundles/Boxy.bundle/Boxy.png";
//		UIImage *image = [[UIImage alloc] initWithContentsOfFile:path];
//		UIImageView *imageView = [[UIImageView alloc] initWithImage:image];		
//		[gv addSubview:imageView];
//		
//		//id scrollView = MSHookIvar<id>(self, "_foregroundScrollView;");
//		// DebugLog(@"lockscreen ScrollView = %@", scrollView);
//		//
//		//[scrollView addSubview:gv];
//		[self addSubview:gv];
//		
//	}



%ctor {
    @autoreleasepool {
		NSLog(@"Wu-Tang Lock yo");
		
		// TODO: register for notifications
		// TODO: load prefs
		
		enabled = YES;
		showSlideTextImmediately = YES;
	}
}
